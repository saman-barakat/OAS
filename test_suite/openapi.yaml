openapi: 3.0.0
info:
  description: This is a sample server
  version: 1.0.0-oas3
  title: Swagger Example
paths:
  /oneDependencyRequires:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - IF p1 THEN p2;
      responses:
        default:
          description: Default
  /oneDependencyOr:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - Or(p1, p2);
      responses:
        default:
          description: Default
  /oneDependencyOnlyOne:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - OnlyOne(p1, p2);
      responses:
        default:
          description: Default
  /oneDependencyAllOrNone:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - AllOrNone(p1, p2);
      responses:
        default:
          description: Default
  /oneDependencyZeroOrOne:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - ZeroOrOne(p1, p2);
      responses:
        default:
          description: Default
  /oneDependencyArithRel:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - p3 <= p5;
      responses:
        default:
          description: Default
  /oneDependencyComplex:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - IF p1 THEN OnlyOne(p2, p3);
      responses:
        default:
          description: Default
  /example1:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: string
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: string
        - name: p4
          in: query
          required: false
          schema:
            type: string
        - name: p5
          in: query
          required: false
          schema:
            type: string
      x-dependencies:
        - ZeroOrOne(p2, p3);
        - IF p2 THEN p3;
      responses:
        default:
          description: Default
  /example2:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: integer
        - name: p3
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p4
          in: query
          required: false
          schema:
            type: integer
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p6
          in: query
          required: false
          schema:
            type: boolean
        - name: p7
          in: query
          required: false
          schema:
            type: integer
        - name: p8
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p9
          in: query
          required: false
          schema:
            type: integer
        - name: p10
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - OnlyOne(p1, p2, p3);
        - IF p2 THEN p3;
      responses:
        default:
          description: Default
  /example3:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: false
          schema:
            type: string
        - name: p3
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p4
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      x-dependencies:
        - Or(p1, p2);
        - IF p1 OR p2 THEN p5;
      responses:
        default:
          description: Default
  /example4:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: integer
        - name: p2
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 100
              - 1000
              - 10000
              - 100000
              - 1000000
        - name: p3
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 100
              - 1000
              - 10000
              - 100000
              - 1000000
        - name: p4
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 100
              - 1000
              - 10000
              - 100000
              - 1000000
        - name: p5
          in: query
          required: false
          schema:
            type: integer
            enum:
              - 100
              - 1000
              - 10000
              - 100000
              - 1000000
        - name: p6
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p7
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p8
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p9
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p10
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
      responses:
        default:
          description: Default
      x-dependencies:
        - IF p1 THEN Or(p3, p4);
        - IF p3 OR p4 THEN NOT p1;
  /example5:
    get:
      parameters:
        - name: p1
          in: query
          required: true
          schema:
            type: boolean
        - name: p2
          in: query
          required: true
          schema:
            type: string
        - name: p3
          in: query
          required: true
          schema:
            type: integer
        - name: p4
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p5
          in: query
          required: true
          schema:
            type: integer
        - name: p6
          in: query
          required: true
          schema:
            type: boolean
        - name: p7
          in: query
          required: true
          schema:
            type: string
        - name: p8
          in: query
          required: true
          schema:
            type: integer
        - name: p9
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p10
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
      responses:
        default:
          description: Default
      x-dependencies:
        - IF p3 THEN p3 < p8;
        - IF p5 THEN p5 < p8;
        - IF p3 AND p5 THEN p8 < p5;
  /example6:
    get:
      parameters:
        - name: p1
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p2
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p3
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p4
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p5
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      responses:
        default:
          description: Default
      x-dependencies:
        - IF p1=='value1' THEN p2=='value2';
        - IF p3<1 THEN p4>5;
        - >-
          IF NOT (p2<=3 OR p3<=4 OR p2=='value5') AND NOT p1=='value3' THEN
          p3<=2;
        - IF p5<=4 THEN NOT p3<4;
        - AllOrNone(p3==3, p3==3);
        - AllOrNone(p3 OR p4 OR p4, p1, p2);
        - AllOrNone(p1=='invalid value', p2=='another invalid value', p5==10);
        - OnlyOne(p5==1, p5==1);
        - OnlyOne(p1, p2, p3, p4, p5);
        - OnlyOne(p1=='value2' AND p5>-1, p3>3);
  /example7:
    get:
      parameters:
        - name: p1
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p2
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p3
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p4
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p5
          in: query
          required: false
          schema:
            type: integer
      responses:
        default:
          description: Default
      x-dependencies:
        - p1==p2;
        - p5>p4;
        - p4>p3;
        - p3>p5;
        - p3+p4+p5<=15;
  /example8:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: boolean
        - name: p2
          in: query
          required: true
          schema:
            type: boolean
        - name: p3
          in: query
          required: false
          schema:
            type: boolean
        - name: p4
          in: query
          required: true
          schema:
            type: boolean
        - name: p5
          in: query
          required: false
          schema:
            type: boolean
        - name: p6
          in: query
          required: true
          schema:
            type: string
        - name: p7
          in: query
          required: false
          schema:
            type: string
        - name: p8
          in: query
          required: true
          schema:
            type: string
        - name: p9
          in: query
          required: false
          schema:
            type: string
        - name: p10
          in: query
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default
      x-dependencies:
        - IF p2 THEN p4; // Useless/redundant dependency, but valid
        - IF p1 THEN (p3==true OR (NOT p3)) AND NOT p7 AND p9=='fixed string';
        - Or(p1, p3, p5 AND p7, p9 AND p1);
        - NOT Or(p1==true, p2==true, p3==false);
        - NOT AllOrNone(p7 AND p9, p8=='something', p5 AND p10=='example');
        - AllOrNone(p1, p5);
        - NOT ZeroOrOne(p1, p5, p7, p2==false, p6=='example');
        - ZeroOrOne(p1, p3);
        - AllOrNone(p6!=p8, p8==p10);
        - >-
          ZeroOrOne(OnlyOne(p5==false, p4==true), OnlyOne(p4, p4==true),
          OnlyOne(p4==true, p6));
  /example9:
    get:
      parameters:
        - name: p1
          in: query
          required: false
          schema:
            type: integer
        - name: p2
          in: query
          required: true
          schema:
            type: integer
        - name: p3
          in: query
          required: false
          schema:
            type: integer
        - name: p4
          in: query
          required: true
          schema:
            type: string
        - name: p5
          in: query
          required: false
          schema:
            type: string
        - name: p6
          in: query
          required: true
          schema:
            type: string
        - name: p7
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p8
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p9
          in: query
          required: false
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p10
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
      responses:
        default:
          description: Default
      x-dependencies:
        - IF p1 THEN p3==10 OR p5;
        - p3 > p1;
        - p2 <= p1;
        - OnlyOne(p5, p7 OR p9);
        - IF p2 THEN p7;
  /example10:
    get:
      parameters:
        - name: p1
          in: query
          required: true
          schema:
            type: boolean
        - name: p2
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p3
          in: query
          required: true
          schema:
            type: string
            enum:
              - value1
              - value2
              - value3
              - value4
              - value5
        - name: p4
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
        - name: p5
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
      responses:
        default:
          description: Default
      x-dependencies:
        - Or(p1==true, p2=='value1');
        - Or(p2=='value2', p4>=4);
        - OnlyOne(p2=='value3', p3=='value4');
        - OnlyOne(p4<=3, p5>=3);
        - ZeroOrOne(p1==false AND p2=='value5', p4==1, p5==2);
        - NOT ZeroOrOne(p1==true, p4>1, p5>2);
        - p4+p5<=5;
        - p4*p5>=4;
        - >-
          IF Or(p1==false, p4>3) OR NOT ZeroOrOne(p2=='value2', p3=='value5')
          THEN p2!=p3 AND OnlyOne(p1, p2);
        - >-
          IF p4+p5<=5 AND p4*p5>=4 THEN p2=='this is the only invalid
          dependency';
servers:
  - url: https://virtserver.swaggerhub.com/saman-barakat/example/1.0.0
  - url: http://virtserver.swaggerhub.com/saman-barakat/example/1.0.0
